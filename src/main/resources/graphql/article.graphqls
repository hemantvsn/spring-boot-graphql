schema {
    query: Query
    mutation: Mutation
}

enum SortOrder {
	ASC
	DESC
}

type Article {
   id: String
   name: String
   createdByUserId: String
   createdOn: String
   lastUpdatedOn: String
}

type Feedback {
    id: String
    feedbackText: String
    articleId: String
    createdByUserId: String
    createdOn: String
    lastUpdatedOn: String
}

type Query {
	getAllArticles(pageNumber: Int!, pageSize : Int!, sortOrder: SortOrder!, sortBy: String!): [Article]
	getFeedBacksForArticle(articleId: String!): [Feedback]
}

type Mutation {
	createArticle(name: String!, createdByUserId: String!): Article
	createNewFeedback(feedbackText: String!, articleId: String!, createdByUserId: String!): Feedback
}